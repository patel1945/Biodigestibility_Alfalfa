library(GWASpoly)
library(scam)
pheno=read.csv("~/Documents/git/Biodigestibility_Alfalfa/BLUEs_ST/pheno_Bs.csv")
str(pheno)
pheno$Env=as.factor(pheno$Env)
head(pheno)
levels(pheno$Env)
colnames(pheno)
trait1 <- colnames(pheno)[2:16]
trait1
length(trait1)
View(pheno)
library(tidyverse)
head(pheno)
spread(data = pheno, key = Env, value = DM)
colnames(pheno)
p1 <- spread(data = pheno, key = Env, value = 1:16)
levels(pheno$Env)
p1 <- pheno %>% dplyr::filter(Env == "ID_2020")
p2 <- pheno %>% dplyr::filter(Env == "OR_2020")
p3 <- pheno %>% dplyr::filter(Env == "OR_2021")
p4 <- pheno %>% dplyr::filter(Env == "WA_2020")
p5 <- pheno %>% dplyr::filter(Env == "WA_2021")
colnames(p1)
colnames(p1)[2:16]
paste0("ID_2020_", colnames(p1)[2:16])
View(p1)
colnames(p1)[2:16] <- paste0("ID_2020_", colnames(p1)[2:16])
colnames(p2)[2:16] <- paste0("OR_2020_", colnames(p2)[2:16])
colnames(p3)[2:16] <- paste0("OR_2021_", colnames(p3)[2:16])
colnames(p4)[2:16] <- paste0("WA_2020_", colnames(p4)[2:16])
colnames(p5)[2:16] <- paste0("WA_2021_", colnames(p5)[2:16])
View(p2)
p1 <- p1 %>% dplyr::select(-Env)
p2 <- p2 %>% dplyr::select(-Env)
p3 <- p3 %>% dplyr::select(-Env)
p4 <- p4 %>% dplyr::select(-Env)
p5 <- p5 %>% dplyr::select(-Env)
View(p5)
colnames(pheno)
p6 <- inner_join(p1, p2, by = "Treatment") %>% inner_join(., p3, by = "Treatment") %>% inner_join(., p4, by = "Treatment") %>% inner_join(., p5, by = "Treatment")
View(p6)
PCA1 <- read.csv("~/Documents/git/Biodigestibility_Alfalfa/BLUEs_ST/PCA.csv")
colnames(p6)[1] <- "gen"
View(p6)
p6 <- inner_join(p6, PCA1, by = "gen")
View(p6)
colnames(p6)
write.csv(p6, "~/Documents/git/Biodigestibility_Alfalfa/BLUEs_ST/pheno_1.csv", quote = F, row.names = F)
pheno=read.csv("~/Documents/git/Biodigestibility_Alfalfa/BLUEs_ST/pheno_1.csv")
View(pheno)
trait1 <- colnames(pheno)[2:76]
trait1
length(trait1)
# params <- set.params(fixed="Env",
#                      fixed.type="factor")
models_1 <- c("general", "additive", "1-dom", "2-dom",  "diplo-additive", "diplo-general")
params <- set.params(fixed=c("PC1","PC2","PC3"),
fixed.type=rep("numeric",3), n.PC = 3)
data <- read.GWASpoly(ploidy=4,
pheno.file="~/Documents/git/Biodigestibility_Alfalfa/BLUEs_ST/pheno_1.csv",
geno.file="~/Documents/git/big_files/Norberg_2.txt",
format="numeric", n.traits=length(trait1), delim=",")
data_2 <- set.K(data = data, LOCO = T, n.core = 10)
data_3 <- GWASpoly(data = data_2, models = models_1, traits = trait1, params = params, n.core = 8)
data_3_cm <- data_3
save(data_3_cm, file = "~/Documents/git/big_files/data_3_cm.RData")
data_5 <- set.threshold(data_3, method= "Bonferroni", level=0.05)
QTL_01 <- get.QTL(data_5)
View(QTL_01)
View(QTL_01)
QTL_02 <- QTL_01 %>% distinct(Marker, .keep_all = T)
View(QTL_02)
View(QTL_01)
write.csv(QTL_01, "~/Documents/git/Biodigestibility_Alfalfa/GWAS_results/QTL_01.csv", quote = F, row.names = F)
write.csv(QTL_02, "~/Documents/git/Biodigestibility_Alfalfa/GWAS_results/QTL_02.csv", quote = F, row.names = F)
15 * 5
pheno=read.csv("~/Documents/git/Biodigestibility_Alfalfa/BLUEs_ST/pheno_Bs.csv")
trait1 <- colnames(pheno)[2:16]
trait1
length(trait1)
# params <- set.params(fixed="Env",
#                      fixed.type="factor")
models_1 <- c("general", "additive", "1-dom", "2-dom",  "diplo-additive", "diplo-general")
params <- set.params(fixed="Env",
fixed.type="factor")
models_1 <- c("general", "additive", "1-dom", "2-dom",  "diplo-additive", "diplo-general")
data <- read.GWASpoly(ploidy=4,
pheno.file="~/Documents/git/Biodigestibility_Alfalfa/BLUEs_ST/pheno_Bs.csv",
geno.file="~/Documents/git/big_files/Norberg_2.txt",
format="numeric", n.traits=length(trait1), delim=",")
data_2 <- set.K(data = data, LOCO = T, n.core = 8)
Pheno_GWAS_fitted <- GWASpoly(data = data_2, models = models_1, traits = trait1, params = params, n.core = 8)
save(Pheno_GWAS_fitted, file = "/home/hawkins/Desktop/Smit/Biodigestibilty/Pheno_GWAS_fitted.RData")
save(Pheno_GWAS_fitted, file = "~/Documents/git/big_files/Pheno_GWAS_fitted.RData")
data_5 <- set.threshold(Pheno_GWAS_fitted, method= "Bonferroni", level=0.05)
QTL_01 <- get.QTL(data_5)
View(QTL_01)
QTL_02 <- QTL_01 %>% distinct(Marker, .keep_all = T)
write.csv(QTL_01, "~/Documents/git/Biodigestibility_Alfalfa/GWAS_results/QTL_03.csv", quote = F, row.names = F)
write.csv(QTL_02, "~/Documents/git/Biodigestibility_Alfalfa/GWAS_results/QTL_04.csv", quote = F, row.names = F)
library(GenomicRanges)
library(genomation)
library(Repitools)
library(data.table)
library(GenomicRanges)
library(genomation)
library(plyranges)
library(Repitools)
library(data.table)
if (!require("BiocManager", quietly = TRUE))
install.packages(c("BiocManager"))
BiocManager::install("genomation","plyranges","Repitools")
BiocManager::install(c("genomation","plyranges","Repitools"))
library(GenomicRanges)
library(genomation)
library(plyranges)
library(Repitools)
library(data.table)
####################
# # GRanges
load("~/Documents/git/big_files/i_5.2.8.RData")
View(i_5.2.8)
# i_5.2.8 <- i_5.2.8 %>% dplyr::select(1,3)
#
#
file <- ("~/Documents/git/big_files/blast_corrected_shen.bed")
txdb <- readBed(file, track.line = FALSE, remove.unusual = FALSE,
zero.based = TRUE)
data_4 <- QTL_02
gr5 <- GRanges(seqnames = data_4$Chrom,
ranges = IRanges(data_4$Position, width = 1))
overlaps <- join_overlap_left(gr5, txdb)
df2 <- annoGR2DF(overlaps)
df2 <- unite(data = df2, col = "Marker1", 1:2, sep = "_", remove = F) %>% distinct(Marker1, .keep_all = TRUE) %>% dplyr::select(1:4,7)
head(df2)
col_headings_1 <- c('gene_id',	'uniprot', 'gene_name',	'trans_length_flag',	'blastp_match_flag',	'nmd_flag',	'frame')
col_headings_2 <- c('gene_id',	'isoform')
head(df2)
View(df2)
col_headings_1 <- c('gene_id',	'uniprot', 'degradation',	'blastp_match_flag')
col_headings_2 <- c('gene_id',	'isoform')
df3 <- df2 %>% separate(5, col_headings_1, sep = ";", remove = TRUE, convert = FALSE, extra = "warn") %>% separate(5, col_headings_2, sep = "\\.", remove = TRUE, convert = FALSE, extra = "warn") %>% dplyr::select(1,5,7) %>% inner_join(., i_5.2.8, by = "gene_id")
View(df3)
head(df2)
df3 <- df2 %>% separate(5, col_headings_1, sep = ";", remove = TRUE, convert = FALSE, extra = "warn")
View(df3)
View(i_5.2.8)
df3 <- df2 %>% separate(5, col_headings_1, sep = ";", remove = TRUE, convert = FALSE, extra = "warn") %>% separate(5, col_headings_2, sep = "\\.", remove = TRUE, convert = FALSE, extra = "warn") %>% dplyr::select(1,5,7) %>% inner_join(., i_5.2.8, by = c("gene_id", "uniprot"))
View(df3)
View(QTL_01)
View(QTL_01)
QTL_03 <- unite(data = QTL_01, col = "Marker1", 5:6, sep = "_", remove = F)
View(QTL_03)
QTL_03 <- unite(data = QTL_01, col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,2,5)
View(QTL_03)
QTL_03 <- unite(data = QTL_01, col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,2,5) %>% spread(key = "Model", value = "Trait")
View(QTL_03)
View(QTL_02)
QTL_03 <- unite(data = QTL_01, col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,2,5) %>% spread(key = "Trait", value = "Model")
View(QTL_03)
QTL_03 <- unite(data = QTL_01, col = "Marker1", 5:6, sep = "_", remove = F)
QTL_03 <- unite(data = QTL_01, col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,2,5)
View(QTL_03)
QTL_03 <- unite(data = QTL_01, col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,2,5) %>% spread(key = "Trait", value = "Model")
QTL_03 <- unite(data = QTL_01, col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,2,5) %>% spread(key = "Model", value = "Trait")
View(QTL_01)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,4) %>% distinct(Marker, Trait, .keep_all = T)
View(S2)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,5) %>% distinct(Marker, Trait, .keep_all = T)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,5) %>% distinct(Marker1, Trait, .keep_all = T)
S2 <- dcast(S2, formula = Marker ~ Trait, fun.aggregate = length)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,5)
View(S2)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,5) %>% distinct(Marker1, Trait, .keep_all = T)
S2 <- dcast(S2, formula = Marker1 ~ Trait, fun.aggregate = length)
QTL_03 <- unite(data = QTL_01, col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,2,5) %>% spread(key = "Model", value = "Trait")
View(QTL_03)
View(S2)
View(df3)
df4 <- left_join(df3, S2, by = "Marker1")
View(df4)
df4 <- right_join(df3, S2, by = "Marker1")
View(df4)
View(QTL_02)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F)
View(S2)
colnames(S2)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,5,10,11)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,5,10,11) %>% distinct(Marker1, Trait, .keep_all = T)
View(S2)
df4 <- right_join(df3, S2, by = "Marker1")
View(df4)
df3 <- df2 %>% separate(5, col_headings_1, sep = ";", remove = TRUE, convert = FALSE, extra = "warn") %>% separate(5, col_headings_2, sep = "\\.", remove = TRUE, convert = FALSE, extra = "warn") %>% inner_join(., i_5.2.8, by = c("gene_id", "uniprot"))
View(df3)
colnames(df3)
df3 <- df2 %>% separate(5, col_headings_1, sep = ";", remove = TRUE, convert = FALSE, extra = "warn") %>% separate(5, col_headings_2, sep = "\\.", remove = TRUE, convert = FALSE, extra = "warn") %>% inner_join(., i_5.2.8, by = c("gene_id", "uniprot")) %>% dplyr::select(1,5,10)
View(df3)
df3 <- df2 %>% separate(5, col_headings_1, sep = ";", remove = TRUE, convert = FALSE, extra = "warn") %>% separate(5, col_headings_2, sep = "\\.", remove = TRUE, convert = FALSE, extra = "warn") %>% inner_join(., i_5.2.8, by = c("gene_id", "uniprot")) %>% dplyr::select(1,7,10)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,5,10,11) %>% distinct(Marker1, Trait, .keep_all = T)
df4 <- right_join(df3, S2, by = "Marker1")
View(df4)
df4 <- right_join(S2, df3, by = "Marker1")
df4 <- left_join(S2, df3, by = "Marker1")
View(df4)
cc <- count(QTL_2,Trait)
cc <- count(QTL_02,Trait)
cc
lev4 <- cc$Trait
lev4
cc1 <- count(QTL_01, Model)
cc1$Model
cc <- count(QTL_01,Trait)
lev4 <- cc$Trait
lev4
cc1 <- count(QTL_01, Model)
cc1$Model
QTL_3 <- QTL_01 %>% dplyr::filter(!Model %in% c("diplo-general", "diplo-additive"))
QTL_3
lev4
fit_05 <- fit.QTL(data=data_5, trait = "Ash",
qtl=QTL_3[,c("Marker","Model")])
View(fit_05)
fit_06 <- fit_05 %>% unite(col = "Marker1", 2:3, sep = "_", remove = T)
View(fit_06)
fit_06 <- fit_05 %>% unite(col = "Marker1", 2:3, sep = "_", remove = T) %>% dplyr::select(2,4,5) %>% distinct(Marker1, Trait, .keep_all = T)
fit_06 <- fit_05 %>% unite(col = "Marker1", 2:3, sep = "_", remove = T) %>% dplyr::select(2,4,5) %>% distinct(Marker1, .keep_all = T)
View(fit_06)
fit_06 <- fit_05 %>% unite(col = "Marker1", 2:3, sep = "_", remove = T) %>% dplyr::select(2,4) %>% distinct(Marker1, .keep_all = T)
df4 <- left_join(S2, df3, by = "Marker1") %>% inner_join(., fit_06, by = "Marker1")
View(df4)
df4 <- left_join(S2, fit_06, by = "Marker1") %>% inner_join(., df3, by = "Marker1")
df4 <- right_join(S2, fit_06, by = "Marker1") %>% inner_join(., df3, by = "Marker1")
df4 <- right_join(S2, fit_06, by = "Marker1") %>% left_join(., df3, by = "Marker1")
View(df4)
write.csv(df4, "~/Documents/git/Biodigestibility_Alfalfa/GWAS_results/anno_smit.csv", quote = F, row.names = F)
data_5 <- set.threshold(data_3_cm, method= "Bonferroni", level=0.05)
QTL_01 <- get.QTL(data_5)
QTL_02 <- QTL_01 %>% distinct(Marker, .keep_all = T)
data_4 <- QTL_02
gr5 <- GRanges(seqnames = data_4$Chrom,
ranges = IRanges(data_4$Position, width = 1))
overlaps <- join_overlap_left(gr5, txdb)
df2 <- annoGR2DF(overlaps)
df2 <- unite(data = df2, col = "Marker1", 1:2, sep = "_", remove = F) %>% distinct(Marker1, .keep_all = TRUE) %>% dplyr::select(1:4,7)
head(df2)
df3 <- df2 %>% separate(5, col_headings_1, sep = ";", remove = TRUE, convert = FALSE, extra = "warn") %>% separate(5, col_headings_2, sep = "\\.", remove = TRUE, convert = FALSE, extra = "warn") %>% inner_join(., i_5.2.8, by = c("gene_id", "uniprot")) %>% dplyr::select(1,7,10)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,5,10,11) %>% distinct(Marker1, Trait, .keep_all = T)
cc <- count(QTL_01,Trait)
lev4 <- cc$Trait
lev4
cc1 <- count(QTL_01, Model)
cc1$Model
QTL_3 <- QTL_01 %>% dplyr::filter(!Model %in% c("diplo-general", "diplo-additive"))
fit_05 <- fit.QTL(data=data_5, trait = "Ash",
qtl=QTL_3[,c("Marker","Model")])
fit_05 <- fit.QTL(data=data_5, trait = "ID_2020_ADICP",
qtl=QTL_3[,c("Marker","Model")])
lev4
View(cc)
fit_05 <- fit.QTL(data=data_5, trait = "ID_2020_B",
qtl=QTL_3[,c("Marker","Model")])
View(QTL_3)
View(QTL_3)
fit_05 <- fit.QTL(data=data_5, trait = "ID_2020_ADICP",
qtl=QTL_3[,c("Marker","Model")])
fit_05 <- fit.QTL(data=data_5,
qtl=QTL_3[,c("Marker","Model")])
QTL_3 <- QTL_01 %>% dplyr::filter(!Model %in% c("diplo-general", "diplo-additive"))
data_5 <- set.threshold(data_3_cm, method= "Bonferroni", level=0.05)
QTL_01 <- get.QTL(data_5)
QTL_02 <- QTL_01 %>% distinct(Marker, .keep_all = T)
QTL_3 <- QTL_01 %>% dplyr::filter(!Model %in% c("diplo-general", "diplo-additive"))
fit_05 <- fit.QTL(data=data_5, trait = "ID_2020_ADICP",
qtl=QTL_3[,c("Marker","Model")])
df4 <- left_join(S2, df3, by = "Marker1")
View(df4)
df4 <- left_join(S2, df3, by = "Marker1")
write.csv(df4, "~/Documents/git/Biodigestibility_Alfalfa/GWAS_results/anno_ces.csv", quote = F, row.names = F)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F)
View(S2)
S2 <- QTL_01 %>% unite(col = "Marker1", 5:6, sep = "_", remove = F) %>% dplyr::select(1,4,5,10,11) %>% distinct(Marker1, Trait, .keep_all = T)
View(S2)
df4 <- left_join(S2, df3, by = "Marker1")
View(df4)
write.csv(df4, "~/Documents/git/Biodigestibility_Alfalfa/GWAS_results/anno_ces.csv", quote = F, row.names = F)
